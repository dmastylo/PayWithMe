var timer;

// measures in milliseconds how much time has passed since the user was active
var idleTime = 0;

var timeIntervals = new function()
{
  // Don't forget to change the mousemovement/keypress firing value as well
  // if you change these values
  this.timesInMilliseconds = {
    "600000": 600000,
    "300000": 25000,
    "18000": 10000
  };

  this.determinePollingFrequency = function(idleTime)
  {
    var localPollingFrequency = 5000;
    var pollingFrequencyValues = this.pollingFrequencyValues();

    for (var i = 0; i < pollingFrequencyValues.length; ++i)
    {
      if (idleTime >= parseInt(pollingFrequencyValues[i]))
      {
        localPollingFrequency = this.timesInMilliseconds[pollingFrequencyValues[i]];
      }
    }

    console.log(localPollingFrequency);

    return localPollingFrequency;
  };

  // Private
  this.pollingFrequencyValues = function()
  {
    var pollingFrequencyValues = [];

    for (var key in this.timesInMilliseconds)
    {
      if (this.timesInMilliseconds.hasOwnProperty(key))
      {
        pollingFrequencyValues.push(key);
      }
    }

    pollingFrequencyValues.sort();

    return pollingFrequencyValues;
  };
}


$(function()
{
  // Event-show-page specific
  if ($('.messages').length > 0)
  {
    // set first message to latest-message
    $(".message:first-child").addClass("latest");

    // Poll for new messages
    var pollingFrequency = <%= Figaro.env.chat_polling.to_i %>;
    timer = setTimeout(updateMessages, pollingFrequency);

    // Track user activity on page
    // Increment the idle time counter every minute
    var idleInterval = setInterval(timerIncrement, 6000);

    // Mouse movement or keypressing will zero the idleTime
    $(this).mousemove(function (e)
    {
      resetIdleTime(pollingFrequency);
    });
    $(this).keypress(function (e)
    {
      resetIdleTime(pollingFrequency);
    });
  }
});

function resetIdleTime(pollingFrequency)
{
  oldIdleTime = idleTime;
  idleTime = 0;

  if (oldIdleTime >= 180000)
  {
    clearTimeout(timer);
    updateMessages(pollingFrequency);
  }
}

function timerIncrement()
{
  idleTime += 6000;
}

function updateMessages(pollingFrequency)
{
  var event_id = $(".messages").attr("data-id");
  var after = $(".message").length > 0
            ? $(".messages").find(".latest.message").attr("data-time")
            : "0";
  $.getScript("/messages.js?event_id=" + event_id + "&after=" + after);

  timer = setTimeout(updateMessages, timeIntervals.determinePollingFrequency(idleTime));
}